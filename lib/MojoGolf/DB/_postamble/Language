=head2 can_compile

Compile some code, return true if compiles, throws exception with the compiler error if not

=cut

use File::Temp  qw/tempfile tempdir/;
use IPC::Run;
use Carp        qw/croak/;

sub can_compile {
    my $self = shift;
    my $code = shift;

    # here we hope you are only running this code with trusted users :-)
    my ($filename, $fh);
    my $temp_dir;
    if ($self->source_filename) {
        # fixed source filename, so we need a directory
        $temp_dir = tempdir( CLEANUP => 1 );
        $filename = $temp_dir . "/" . $self->source_filename;
        open ($fh, ">", $filename) || croak "cannot open $filename - $!";
    }
    else {
        ($fh, $filename) = tempfile();
    }

    if ($self->boilerplate) {
        my $tmp = $code;
        $code = $self->boilerplate;
        $code =~ s/CODEHERE/$tmp/g;
    }

    print $fh $code;
    close $fh;

    my @cmd = split(/!/, $self->compile);
    s/^SRC$/$filename/ foreach (@cmd);

    my ($out, $err);
    my $exit = IPC::Run::run \@cmd, \undef, \$out, \$err, IPC::Run::timeout(10);

    # replace source filenames with a more useful string
    $err =~ s/\Q$filename\E/<yourcode>/msg;

    unlink $filename;

    # throw exception with compiler error messages from stderr, if the compiler
    # didn't exit with a success
    die "$err\n" if (! $exit);

    # otherwise it looks like everything was good
    return 1;
}

sub display_name {
    my $class    = shift;
    my $col_name = shift;

    return 'Boilerplate Wrapper' if ($col_name eq 'boilerplate');
    return $class->SUPER::display_name($col_name);
}
